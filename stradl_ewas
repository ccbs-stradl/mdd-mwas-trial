#!/bin/bash
# version="0.1"
#
# ARG_OPTIONAL_SINGLE([pdata],[d],[Input phenotypes csv file])
# ARG_OPTIONAL_SINGLE([pheno],[p],[Name of phenotype])
# ARG_OPTIONAL_SINGLE([cov],[c],[Covariates RDS (model specification)],[/exports/igmm/eddie/GenScotDepression/data/genscot/methylation/STRADL/Mvalues/wave1_modelE_covariates.rds])
# ARG_OPTIONAL_SINGLE([sentrix],[s],[Sentrix ID linker],[/exports/igmm/eddie/GenScotDepression/data/genscot/methylation/STRADL/Mvalues/sentrix.rds])
# ARG_OPTIONAL_SINGLE([mvals],[m],[Mvalues chromosome file pattern],[/exports/igmm/eddie/GenScotDepression/data/genscot/methylation/STRADL/Mvalues/chr/mvalues.chr%.rds])
# ARG_OPTIONAL_SINGLE([pca],[e],[PCA file],[/exports/igmm/eddie/GenScotDepression/data/genscot/methylation/STRADL/Mvalues/Konrad_Corrected_resid_mvals_relateds_PCA_PC50_301017.rds])
# ARG_OPTIONAL_SINGLE([probes],[r],[Probes to exclude],[/exports/igmm/eddie/GenScotDepression/data/genscot/methylation/STRADL/Mvalues/SNP_CH_probes])
# ARG_OPTIONAL_SINGLE([out],[o],[Output prefix])
# ARG_VERSION([echo test v$version])
# ARG_HELP([The general script's help msg])
# ARGBASH_GO()
# needed because of Argbash --> m4_ignore([
### START OF CODE GENERATED BY Argbash v2.6.1 one line above ###
# Argbash is a bash code generator used to get arguments parsing right.
# Argbash is FREE SOFTWARE, see https://argbash.io for more info
# Generated online by https://argbash.io/generate

die()
{
	local _ret=$2
	test -n "$_ret" || _ret=1
	test "$_PRINT_HELP" = yes && print_help >&2
	echo "$1" >&2
	exit ${_ret}
}

begins_with_short_option()
{
	local first_option all_short_options
	all_short_options='dpcsmerovh'
	first_option="${1:0:1}"
	test "$all_short_options" = "${all_short_options/$first_option/}" && return 1 || return 0
}



# THE DEFAULTS INITIALIZATION - OPTIONALS
_arg_pdata=
_arg_pheno=
_arg_cov="/exports/igmm/eddie/GenScotDepression/data/genscot/methylation/STRADL/Mvalues/wave1_modelE_covariates.rds"
_arg_sentrix="/exports/igmm/eddie/GenScotDepression/data/genscot/methylation/STRADL/Mvalues/sentrix.rds"
_arg_mvals="/exports/igmm/eddie/GenScotDepression/data/genscot/methylation/STRADL/Mvalues/chr/mvalues.chr%.rds"
_arg_pca="/exports/igmm/eddie/GenScotDepression/data/genscot/methylation/STRADL/Mvalues/Konrad_Corrected_resid_mvals_relateds_PCA_PC50_301017.rds"
_arg_probes="/exports/igmm/eddie/GenScotDepression/data/genscot/methylation/STRADL/Mvalues/SNP_CH_probes"
_arg_out=

print_help ()
{
	printf '%s\n' "The general script's help msg"
	printf 'Usage: %s [-d|--pdata <arg>] [-p|--pheno <arg>] [-c|--cov <arg>] [-s|--sentrix <arg>] [-m|--mvals <arg>] [-e|--pca <arg>] [-r|--probes <arg>] [-o|--out <arg>] [-v|--version] [-h|--help]\n' "$0"
	printf '\t%s\n' "-d,--pdata: Input phenotypes csv file (no default)"
	printf '\t%s\n' "-p,--pheno: Name of phenotype (no default)"
	printf '\t%s\n' "-c,--cov: Covariates RDS (model specification) (default: '/exports/igmm/eddie/GenScotDepression/data/genscot/methylation/STRADL/Mvalues/wave1_modelE_covariates.rds')"
	printf '\t%s\n' "-s,--sentrix: Sentrix ID linker (default: '/exports/igmm/eddie/GenScotDepression/data/genscot/methylation/STRADL/Mvalues/sentrix.rds')"
	printf '\t%s\n' "-m,--mvals: Mvalues chromosome file pattern (default: '/exports/igmm/eddie/GenScotDepression/data/genscot/methylation/STRADL/Mvalues/chr/mvalues.chr%.rds')"
	printf '\t%s\n' "-e,--pca: PCA file (default: '/exports/igmm/eddie/GenScotDepression/data/genscot/methylation/STRADL/Mvalues/Konrad_Corrected_resid_mvals_relateds_PCA_PC50_301017.rds')"
	printf '\t%s\n' "-r,--probes: Probes to exclude (default: '/exports/igmm/eddie/GenScotDepression/data/genscot/methylation/STRADL/Mvalues/SNP_CH_probes')"
	printf '\t%s\n' "-o,--out: Output prefix (no default)"
	printf '\t%s\n' "-v,--version: Prints version"
	printf '\t%s\n' "-h,--help: Prints help"
}

parse_commandline ()
{
	while test $# -gt 0
	do
		_key="$1"
		case "$_key" in
			-d|--pdata)
				test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
				_arg_pdata="$2"
				shift
				;;
			--pdata=*)
				_arg_pdata="${_key##--pdata=}"
				;;
			-d*)
				_arg_pdata="${_key##-d}"
				;;
			-p|--pheno)
				test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
				_arg_pheno="$2"
				shift
				;;
			--pheno=*)
				_arg_pheno="${_key##--pheno=}"
				;;
			-p*)
				_arg_pheno="${_key##-p}"
				;;
			-c|--cov)
				test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
				_arg_cov="$2"
				shift
				;;
			--cov=*)
				_arg_cov="${_key##--cov=}"
				;;
			-c*)
				_arg_cov="${_key##-c}"
				;;
			-s|--sentrix)
				test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
				_arg_sentrix="$2"
				shift
				;;
			--sentrix=*)
				_arg_sentrix="${_key##--sentrix=}"
				;;
			-s*)
				_arg_sentrix="${_key##-s}"
				;;
			-m|--mvals)
				test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
				_arg_mvals="$2"
				shift
				;;
			--mvals=*)
				_arg_mvals="${_key##--mvals=}"
				;;
			-m*)
				_arg_mvals="${_key##-m}"
				;;
			-e|--pca)
				test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
				_arg_pca="$2"
				shift
				;;
			--pca=*)
				_arg_pca="${_key##--pca=}"
				;;
			-e*)
				_arg_pca="${_key##-e}"
				;;
			-r|--probes)
				test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
				_arg_probes="$2"
				shift
				;;
			--probes=*)
				_arg_probes="${_key##--probes=}"
				;;
			-r*)
				_arg_probes="${_key##-r}"
				;;
			-o|--out)
				test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
				_arg_out="$2"
				shift
				;;
			--out=*)
				_arg_out="${_key##--out=}"
				;;
			-o*)
				_arg_out="${_key##-o}"
				;;
			-v|--version)
				echo test v$version
				exit 0
				;;
			-v*)
				echo test v$version
				exit 0
				;;
			-h|--help)
				print_help
				exit 0
				;;
			-h*)
				print_help
				exit 0
				;;
			*)
				_PRINT_HELP=yes die "FATAL ERROR: Got an unexpected argument '$1'" 1
				;;
		esac
		shift
	done
}

parse_commandline "$@"

# OTHER STUFF GENERATED BY Argbash

### END OF CODE GENERATED BY Argbash (sortof) ### ])
# [ <-- needed because of Argbash

data=/exports/igmm/eddie/GenScotDepression/data/genscot/methylation/STRADL/Mvalues

mkdir -p logs


# check required arguments
if [ -z $_arg_pdata ]; then
        echo "Missing required argument --pdata CSV"
        exit
fi

if [ -z $_arg_pheno ]; then
        echo "Missing required argument --pheno PHENOTYPE"
        exit
fi

if [ -z $_arg_out ]; then
        echo "Missing required argument --out PREFIX"
        exit
fi

# check input file
if [ ! -f $_arg_pdata ]; then
  echo "Error: Phenotype input file cannot be found: $_arg_pdata"
  exit
fi

input_has_id=$(Rscript -e "cat('id' %in% names(read.csv('$_arg_pdata', header=T)))")

if [ ! $input_has_id == "TRUE" ]; then
  echo "Error: Phenotype input file has no column 'id': $_arg_pdata"
  exit
fi

input_has_pheno=$(Rscript -e "cat('$_arg_pheno' %in% names(read.csv('$_arg_pdata', header=T)))")

if [ ! $input_has_pheno == "TRUE" ]; then
  echo "Error: Phenotype input file has no column '$_arg_pheno': $_arg_pdata"
  echo "Coluumns are:"
  echo $(Rscript -e "cat(names(read.csv('$_arg_pdata', header=T)))")
  exit
fi

# check covariate file
if [ ! -f $_arg_cov ]; then
  echo "Error: Covariate model file cannot be found: $_arg_cov"
  exit
fi

cov_has_id=$(Rscript -e "cat('id' %in% names(readRDS('$_arg_cov')))")

if [ ! $cov_has_id == "TRUE" ]; then
  echo "Error: Covariate model file has no column 'id': $_arg_cov"
  exit
fi

sentrix_has_id=$(Rscript -e "cat('id' %in% names(readRDS('$_arg_sentrix')))")
sentrix_has_sentrix=$(Rscript -e "cat('Sample_Sentrix_ID' %in% names(readRDS('$_arg_sentrix')))")

if [ ! $sentrix_has_id == "TRUE" ]; then
  echo "Error: Sentrix linker file has no column 'id': $_arg_sentrix"
  exit
fi

if [ ! $sentrix_has_sentrix == "TRUE" ]; then
  echo "Error: Sentrix linker file has no column 'Sample_Sentrix_ID': $_arg_sentrix"
  exit
fi

# check output file
if [ -f ${_arg_out}.toptable.txt ]; then
  echo "Error: Output file already exists: ${_arg_out}.toptable.txt"
  exit
fi

job_name=ewas_$(basename $_arg_pdata .csv)_$_arg_pheno

echo qsub -N $job_name /exports/igmm/eddie/GenScotDepression/local/EWAS/ewas_chr.sh --pdata $_arg_pdata --pheno $_arg_pheno --out $_arg_out --cov $_arg_cov --sentrix $_arg_sentrix --mvals $_arg_mvals --pca $_arg_pca --probes $_arg_probes 


# ] <-- needed because of Argbash
